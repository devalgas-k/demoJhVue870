package com.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ExpertiseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExpertiseAllPropertiesEquals(Expertise expected, Expertise actual) {
        assertExpertiseAutoGeneratedPropertiesEquals(expected, actual);
        assertExpertiseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExpertiseAllUpdatablePropertiesEquals(Expertise expected, Expertise actual) {
        assertExpertiseUpdatableFieldsEquals(expected, actual);
        assertExpertiseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExpertiseAutoGeneratedPropertiesEquals(Expertise expected, Expertise actual) {
        assertThat(expected)
            .as("Verify Expertise auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExpertiseUpdatableFieldsEquals(Expertise expected, Expertise actual) {
        assertThat(expected)
            .as("Verify Expertise relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getLevel()).as("check level").isEqualTo(actual.getLevel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExpertiseUpdatableRelationshipsEquals(Expertise expected, Expertise actual) {
        assertThat(expected)
            .as("Verify Expertise relationships")
            .satisfies(e -> assertThat(e.getExperiences()).as("check experiences").isEqualTo(actual.getExperiences()));
    }
}
